// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prismproject_A.Data;

#nullable disable

namespace Prismproject_A.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240701093813_Immerse")]
    partial class Immerse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prismproject_A.Models.BoxLocations", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Compartment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Freezername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Position")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Rack")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("BoxLocations");
                });

            modelBuilder.Entity("Prismproject_A.Models.BoxMain", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BoxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Boxlocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BoxMain");
                });

            modelBuilder.Entity("Prismproject_A.Models.BoxSubs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AliquotePlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AliquotePlatePosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("BoxColumn")
                        .HasColumnType("tinyint");

                    b.Property<string>("BoxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("BoxRow")
                        .HasColumnType("tinyint");

                    b.Property<string>("PcrplateLayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TbldateAdded")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BoxSubs");
                });

            modelBuilder.Entity("Prismproject_A.Models.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Subscribed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Prismproject_A.Models.FreezerDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Compartment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Freezername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Position")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Rack")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("FreezerDetails");
                });

            modelBuilder.Entity("Prismproject_A.Models.ImmerseSamples", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AliquotePlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AliquotePlatePosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("BoxColumn")
                        .HasColumnType("tinyint");

                    b.Property<string>("BoxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("BoxRow")
                        .HasColumnType("tinyint");

                    b.Property<string>("PcrplateLayout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlateNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TbldateAdded")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ImmerseSamples");
                });

            modelBuilder.Entity("Prismproject_A.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("LocId")
                        .HasColumnType("tinyint");

                    b.Property<string>("LocName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Prismproject_A.Models.MRCmapping", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Code")
                        .HasColumnType("tinyint");

                    b.Property<string>("Mrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MRCmapping");
                });

            modelBuilder.Entity("Prismproject_A.Models.PasteErrors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("F1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("F2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("F3")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("F4")
                        .HasColumnType("time");

                    b.Property<DateTime>("F5")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PasteErrors");
                });

            modelBuilder.Entity("Prismproject_A.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("BoxColumn")
                        .HasColumnType("tinyint");

                    b.Property<string>("BoxNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("BoxRow")
                        .HasColumnType("tinyint");

                    b.Property<string>("SampleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TbldateAdded")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("Prismproject_A.Models.SpecimenTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("NumCols")
                        .HasColumnType("tinyint");

                    b.Property<byte>("NumRows")
                        .HasColumnType("tinyint");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecimenName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("SpecimenType")
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("SpecimenTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
